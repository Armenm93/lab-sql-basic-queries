{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red125\green140\blue147;\red32\green32\blue32;\red219\green219\blue219;
\red155\green222\blue158;\red237\green172\blue87;\red247\green89\blue114;}
{\*\expandedcolortbl;;\csgenericrgb\c49020\c54902\c57647;\csgenericrgb\c12549\c12549\c12549;\csgenericrgb\c85882\c85882\c85882;
\csgenericrgb\c60784\c87059\c61961;\csgenericrgb\c92941\c67451\c34118;\csgenericrgb\c96863\c34902\c44706;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab624
\pard\pardeftab624\pardirnatural\partightenfactor0

\f0\fs26 \cf2 \cb3 -- Challenge 1\
-- Practice select (selecting all columns, selecting one column), as (giving aliases), distinct (unique values), count (counting records), order by, limit, \
-- and where (filtering: where, like, and).\
\cf4 \
\cf2 -- 1. Use the sakila database and show all tables.\
\cf5 USE\cf4  sakila;\
SHOW tables;\
\
\cf2 -- 2. Retrieve all data from a table. Retrieve all the data from the `actor`, `film` and `customer` tables.\
\cf5 SELECT\cf4  \cf5 *\cf4  \cf5 FROM\cf4  actor;\
\cf5 SELECT\cf4  \cf5 *\cf4  \cf5 FROM\cf4  film;\
\cf5 SELECT\cf4  \cf5 *\cf4  \cf5 FROM\cf4  customer;\
\
\cf2 -- 3. Retrieve some columns from a table. Retrieve the following columns from their respective tables:\
-- 3.1 Titles of all films from the film table\
\cf5 SELECT\cf4  title \cf5 FROM\cf4  film;\
\cf2 -- 3.2. List of languages used in films, with the column aliased as language from the language table\
\cf5 SELECT\cf4  name \cf5 AS\cf4  language\
\cf5 FROM\cf4  language;\
\cf2 -- 3.3 List of first names of all employees from the staff table\
\cf5 SELECT\cf4  first_name \cf5 FROM\cf4  staff;\
\
\cf2 -- 4. Retrieve unique or distinct values: retrieve unique release years.\
\cf5 SELECT\cf4  DISTINCT release_year \cf5 FROM\cf4  film;\
\
\cf2 -- 5. Counting records: using the count() built-in method.\
-- 5.1 Determine the number of stores that the company has.\
-- To get the number of stores whe need to get the count of unique store_id.\
\cf5 SELECT\cf4  COUNT(DISTINCT store_id) \cf5 FROM\cf4  store;\
\cf2 -- 5.2 Determine the number of employees that the company has.\
-- To get the number of employees whe need to get the count of unique staff_id.\
\cf5 SELECT\cf4  COUNT(DISTINCT staff_id) \cf5 FROM\cf4  staff;\
\cf2 -- 5.3 Determine how many films are available for rent and how many have been rented.\
\cf5 SELECT\cf4  COUNT(\cf5 *\cf4 ) \cf5 FROM\cf4  film;\
\cf5 SELECT\cf4  COUNT(\cf5 *\cf4 ) \cf5 FROM\cf4  rental;\
\cf2 -- 5.4 Determine the number of distinct last names of the actors in the database.\
\cf5 SELECT\cf4  COUNT(DISTINCT last_name)\
\cf5 FROM\cf4  actor;\
\
\cf2 -- 6. Ordering and limiting results: retrieve the 10 longest films.\
\cf5 SELECT\cf4  title \cf5 FROM\cf4  film\
\cf5 ORDER\cf4  \cf5 BY\cf4  length \cf5 DESC\cf4 \
\cf5 LIMIT\cf4  \cf6 10\cf4 ;\
\
\cf2 -- 7. Filter data:\
-- 7.1 Select all actors with the first name "SCARLETT".\
\cf5 SELECT\cf4  \cf5 *\cf4  \cf5 FROM\cf4  actor\
\cf5 WHERE\cf4  first_name = \cf7 'SCARLETT'\cf4 ;\
\cf2 -- 7.2 Select all movies that have ARMAGEDDON in their title and have a duration longer than 100 minutes. Hint: use `LIKE` operator. More info: https://www.w3schools.com/sql/sql_like.asp.\
\cf5 SELECT\cf4  \cf5 *\cf4  \cf5 FROM\cf4  film\
\cf5 WHERE\cf4  title like \cf7 '%ARMAGEDDON%'\cf4  \cf5 AND\cf4  length > \cf6 100\cf4 ;\
\cf2 -- 7.3 Determine the number of films that include Behind the Scenes content\
\cf5 SELECT\cf4  COUNT(\cf5 *\cf4 ) \cf5 FROM\cf4  film\
\cf5 WHERE\cf4  special_features LIKE \cf7 '%Behind the Scenes%\'92\cf4 ;}